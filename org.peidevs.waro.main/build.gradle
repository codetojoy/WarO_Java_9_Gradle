
import java.util.regex.Matcher

plugins {
    id 'java-library'
    id 'application'
    id 'org.gradle.java.experimental-jigsaw' version '0.1.1'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':org.peidevs.waro.base')
    implementation project(':org.peidevs.waro.function')
}

<<<<<<< HEAD
javaModule.name = 'org.peidevs.waro.main'
=======
ext.moduleName = 'org.peidevs.waro.main'

mainClassName = "org.peidevs.waro.Main"

// see ~/build.gradle for compileJava and compileTestJava tasks re: modules
>>>>>>> 4456f6e7b29ed55dc5da4b5f51e43df418665a70

project.ext.stagingDir = 'staging'

installDist.doFirst {
    ant.delete(dir: project.ext.stagingDir)
}

installDist {
    into project.ext.stagingDir
}
<<<<<<< HEAD
=======

run {
    inputs.property("moduleName", moduleName)
    doFirst {
        jvmArgs = [
            '--module-path', classpath.asPath,
            '--add-modules', moduleName,
            '--add-opens', 'java.base/java.lang=spring.core',
        ]
    }
}

startScripts {
    inputs.property("moduleName", moduleName)
    doFirst {
        defaultJvmOpts = [
            '--module-path', 'APP_HOME_LIB',
            '--add-modules', moduleName,
            '--add-opens', 'java.base/java.lang=spring.core',
        ]
    }

    doLast{
        def bashFile = new File(outputDir, applicationName)
        String bashContent = bashFile.text
        bashFile.text = bashContent.replaceFirst('APP_HOME_LIB', Matcher.quoteReplacement('$APP_HOME/lib'))

        def batFile = new File(outputDir, applicationName + ".bat")
        String batContent = batFile.text
        batFile.text = batContent.replaceFirst('APP_HOME_LIB', Matcher.quoteReplacement('%APP_HOME%\\lib'))
    }
}
>>>>>>> 4456f6e7b29ed55dc5da4b5f51e43df418665a70
